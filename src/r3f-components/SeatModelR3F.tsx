/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /home/dusan/Documents/wut/cinemaChair/cinemaChair.gltf
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshStandardMaterial, MeshBasicMaterial } from 'three'
import { ThreeEvent } from '@react-three/fiber'

const materialOccupied = new MeshStandardMaterial({ color: '#505050' })
const materialUnoccupied = new MeshStandardMaterial({
  color: '#800000',
  //roughness: 0.5
})
const materialSelected = new MeshStandardMaterial({ color: '#33ff00' })

// const colorUnoccupied = "#900000"
// const colorOccupied = "#900000"
// const colorSelected = "#3300ff"

export function SeatModelR3F(props: { 'position-x': number, 'position-y': number, 'position-z': number, scale: number, isReserved: boolean, isSelected: boolean, onClick: (e: ThreeEvent<MouseEvent>) => void }) {
  //const { nodes, materials } = useGLTF('./cinemaChair/cinemaChair.gltf') as any
  const { nodes, materials } = useGLTF('./cinemaChairD/cinemaChair6') as any


  const material = props.isSelected ? materialSelected : (props.isReserved ? materialOccupied : materialUnoccupied)

  return (
    <group
      dispose={null}
      position-x={props['position-x']}
      position-y={props['position-y']}
      position-z={props['position-z']}
      scale={props['scale']}
      onClick={props['onClick']}
      rotation={[0, Math.PI, 0]}
    >
      <mesh
        geometry={nodes['Cube1'].geometry}
        rotation={[0, 0, Math.PI * 2]}
        //scale={props.scale}
        material={material}
        receiveShadow
      />
    </group>
  )
}

useGLTF.preload('/cinemaChair.gltf')